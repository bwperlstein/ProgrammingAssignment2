file.create(HelloWorld.md)
file.edit(HelloWorld.md)
file.create(HellowWorld)
file.edit(helloworld)
file.edit(test_file)
help.start()
help("create.post")
help("file")
help("create")
help("file.create")
dirname
path.expand()
help('path')
help("path")
cd
list()
cd
dir
file.create("HelloWorld.md", showWarnings = TRUE)
file.edit("Helloworld.md")
getwd
getwd()
setwd("c:/Uers/berna/Documents/R")
q()
packageVersion("swirl")
library(dwirl)
library(swirl)
ls
ls()
rm(list=ls())
ls()
swirl()
exit
q()
package_version("swirl")
packageVersion("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
dir()
?list.filea
?list.files
args(list.files)
setwd("old.dir")
setwd(old.dir)
old.dir <- getwd()
dir.create(test.dir)
dir.create("test.dir")
dir.create("testdir")
setwd("old.dir/testdir")
setwd(c(old.dir, "testdir"))
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
folder1 <- ("c:Users/berna/Documents")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path(getwd(), "testdir2"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by = 0.5)
seq(0, 10, length = 30)
smy_seq <- eq(0, 10, length = 30)
my_seq <- seq(0, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
c(0.5, 55, -10, 6)
num-vect <- c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "bernie perlstein")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("x", "y", "z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
LETTERS <- seq("a":"z")
LETTERS <- seq("a", length = 26)
LETTERS <- seq("a", "z",length = 26)
LETTERS <-
?rep
?rep
rep("a", times = 26)
LETTERS <- rep("a", times = 26)
LETTERS <- LETTERS + 0:25
LETTERS <- c(LETTERS, 0:25)
LETTERS
paste(LETTERS, 0:25, sep = "-")
skip()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
print my_na
my_na
my_data == NA
sum(my_na)
print(my_data)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3], x[5], x[7])
c(3, 5, 7)
y <- c(3, 5, 7)
z <- c(y{1}, y[2}, y(3)]
z <- c(y{1}, y[2}, y(3))
z <- c(y{1}, y[2], y(3))
z <- c(y[1], y[2], y[3])
info()
z
skip()
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- (foo = 11, bar = 2, norf = NA)
vect <- (foo = 11, bar = 2, norf = NA)
vect <- (foo = 11, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2 <- c("foo", "bar", "norf"))
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim (my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical (my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patiens", "age", "weight", "bp", 'rating', "test")
cnames <- c("patient", "age", "weight", "bp", 'rating', "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
swirl()
swirl()
swirl()
swirl()
swirl()
getwd()
ls()
x <- 9
ls ()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
ls
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path(mytest3.R) <- "testdir"
file.path("mytest3.R") <- "testdir"
skip()
file.path("mytest3.R")
file.path("testdir", "mytest3.R")
file.path(getwd(), "mytest3.R")
skip()
?dir.create
dir.create(file.path("mytest3.dir"), "testdir2", "testdir3")
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd() <- old.dir
setwd(old.dir)
x <- 5
if(x > 4) {}
if(x > 4) {
y <- 10
} else {
y <- 0}
y
x <- 3
if(x > 4) {
+     y <- 10
+ } else {
+     y <- 0}
setwd("R")
source("if_then.R")
library(if_then.R)
?function
source("if_then.R")
library(if_then1)
if_then1
if_then1()
ls
ls()
getwd()
dir()
if_then1
if_then1()
library(if_then1)
library(if_then.R)
source("if_then.R")
if_then1()
rm(y)
y <- if(x > 4) {
10
} else {
0}
y
x <- 5
y <- if (x > 5) {
10
} else if (x =5) {
} else if (x == 5) {
} else {if (x == 5) {
y <- if(x > 5) {
10
} else if(x == 5) {
5
} else {
2
}
y
x <- c("a", "b", "c", "d")
for (i in 1:4) {
print(i)
}
for(i in 1:seq_along(x)) {}
for(i in 1:seq_along(x)) {
print(x)
}
for(letter in x) {}
print(letter)
}
for(letter in x) {
print(letter)
}
for(i in 1:4) {
print(x(i))
}
for(i in 1:4) {
print(x[i]
}
for(i in 1:4) {
print(x[i])
}
x <- matrix(1:6, 2, 3)
for (i in seq-len(nrow(x)) {
}
for (i in seq-len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(i, J)
}
}
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
}
}
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(i, j)
}
}
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x(i, j))
}
}
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[i, j]))
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[i, j])
}
}
x
class(x)
count <- 0
while(count < 10)  {
print(count)
count <- count + 1
}
z <- 5
while (z >= 3 && z <= 10) {
}
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 11
while (z >= 3 && z <= 10) {
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
while (z >= 3 && z <= 10) {
print(z)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
x0 <- 1
tol <- 1e-8
repeat() {
repeat {
x1 <- computeEstimate()
if(abs(x1 - x0) < tol) {
break
} else {
x0 <- x1
}
}
for(i in 1:100) {
if(i <= 20) {
next
} else {
print(i)
}
}
add2 <- function(x, y) {
x + y
}
add2(3, 5)
above <- function(x, N) {
use <- x > n
x[use]
}
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n = 10) {
use <- x > n
x(use)
}
above(x)
x
above(x, 12)
above function(x, n = 10) {
use <- x > n
x[use]
}
above function(x, n = 10) {
use <- x > n
x[use]
}
above function(x, n = 10) {
use <- x > n
x[use]
}
above function(x, n = 10) {
use <- x > n
x[use]
}
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above <- function(x, n=10) {
use <- x > n
x[use]
}
above(x)
above(x, 12)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
columnmean(airquality, F)
getwd
dir()
make.power <- function(n) {
pow <- function(x) {
X^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube
View(make.power)
View(make.power)
x ^ n
x <- 3
n <- 3
x^n
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
cube
x
n
cube <- make.power(3)
cube
cube(3)
square(2)
square(3)
ls(environment(cube))
get("n", environment(cube))
get("n", environment(square))
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
y <- 10
f(3)
